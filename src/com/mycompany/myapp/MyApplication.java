package com.mycompany.myapp;


import com.codename1.components.MultiButton;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.ui.Container;
import com.codename1.ui.plaf.Border;
import entity.Formation;
import java.util.ArrayList;
import static java.util.Collections.list;
import services.ServiceFormation;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
     private ArrayList<Formation> list;
       private long lastScroll;
    
    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
         Form hi = new Form("Hi World", BoxLayout.y());
         list = new ArrayList<>();
        Container c = new Container(BoxLayout.y());
        hi.addPointerDraggedListener(e -> lastScroll = System.currentTimeMillis());
       
        
        hi.setScrollableY(true);
        c.setScrollableY(true);
        c.getStyle().setBorder(Border.createLineBorder(2));
      
               
        list.addAll(ServiceFormation.getInstance().getAllTasks());
        System.out.println("liiist"+ServiceFormation.getInstance().getAllTasks());
        
         for (Formation t : list) {
  System.out.println("liiist"+list);
            MultiButton mb = new MultiButton(""+t.getId());
            Label l = new Label(""+t.getId());
         }
         hi.show();
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
