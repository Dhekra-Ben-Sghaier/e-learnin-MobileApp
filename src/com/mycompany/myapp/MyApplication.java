package com.mycompany.myapp;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import entity.Formation;
import gui.AjouterFormations;
import gui.DetailsFormation;
import gui.MesAchat;
import gui.indexFormation;



import java.util.ArrayList;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
    
     private ArrayList<Formation> list;
       private long lastScroll;
        

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);
       
        theme = UIManager.initFirstTheme("/theme_1");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
         new MesAchat(theme).show();
       // new DetailsFormation(theme).show();
      // new indexFormation(theme).show();
          //new AjouterFormations(theme).show();
        System.out.println("c bnnn");
        //new Inscription(theme).show();
       
//         Form hi = new Form("Hi World", BoxLayout.y());
//         list = new ArrayList<>();
//        Container c = new Container(BoxLayout.y());
//        hi.addPointerDraggedListener(e -> lastScroll = System.currentTimeMillis());
//       
//        
//        hi.setScrollableY(true);
//        c.setScrollableY(true);
//        c.getStyle().setBorder(Border.createLineBorder(2));
//      
//               
//        list.addAll(ServiceFormation.getInstance().getAllTasks());
//        System.out.println("liiist"+ServiceFormation.getInstance().getAllTasks());
//        
//         for (Formation t : list) {
//  System.out.println("liiist"+list);
//            MultiButton mb = new MultiButton(""+t.getId());
//            Label l = new Label(""+t.getId());
//         }
//         hi.show();

    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }
    
}
